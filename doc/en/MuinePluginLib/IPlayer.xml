<Type Name="IPlayer" FullName="MuinePluginLib.IPlayer">
  <TypeSignature Language="C#" Value="public abstract interface IPlayer" Maintainer="auto" />
  <AssemblyInfo>
    <AssemblyName>muine-plugin</AssemblyName>
    <AssemblyPublicKey>[00 24 00 00 04 80 00 00 94 00 00 00 06 02 00 00 00 24 00 00 52 53 41 31 00 04 00 00 11 00 00 00 C5 37 4D 60 8D CC BC 44 7A D1 32 5C B6 3C 9B D1 6B 06 FB A7 3E A7 1A 10 D3 C9 F3 11 88 C7 7D D3 04 CA B0 96 51 5C 27 24 3C 5C 31 1D A5 06 36 19 95 BB 06 BB 44 FD 61 84 E0 5A 64 B4 83 3B A8 51 D3 19 7A DC F9 3E 16 C3 70 08 C9 6A 52 D3 34 66 7B B8 E0 D1 9F 27 71 7A E9 79 69 47 BE 41 4F B7 F6 BF 6F BE 3B E7 71 12 73 FC 8A 1D FD 7C 4B 24 7F C3 5E A6 EE 15 E4 1F A2 FB 99 9B 72 04 64 82]</AssemblyPublicKey>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyCulture>neutral</AssemblyCulture>
    <Attributes />
  </AssemblyInfo>
  <ThreadSafetyStatement>Gtk# is thread aware, but not thread safe; See the <link location="node:gtk-sharp/programming/threads">Gtk# Thread Programming</link> for details.</ThreadSafetyStatement>
  <Docs>
    <summary>Player interface</summary>
    <remarks>This is the interface used to control and query Muine from within your plug-in.</remarks>
  </Docs>
  <Base />
  <Interfaces />
  <Attributes />
  <Members>
    <Member MemberName="Next">
      <MemberSignature Language="C#" Value="public virtual void Next ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="Previous">
      <MemberSignature Language="C#" Value="public virtual void Previous ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="PlaySong">
      <MemberSignature Language="C#" Value="public virtual void PlaySong ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="PlayAlbum">
      <MemberSignature Language="C#" Value="public virtual void PlayAlbum ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="OpenPlaylist">
      <MemberSignature Language="C#" Value="public virtual void OpenPlaylist (string uri);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.String" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="uri">a <see cref="T:System.String" /></param>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="PlayFile">
      <MemberSignature Language="C#" Value="public virtual void PlayFile (string uri);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.String" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="uri">a <see cref="T:System.String" /></param>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="QueueFile">
      <MemberSignature Language="C#" Value="public virtual void QueueFile (string uri);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.String" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="uri">a <see cref="T:System.String" /></param>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="Quit">
      <MemberSignature Language="C#" Value="public virtual void Quit ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="PlayingSong">
      <MemberSignature Language="C#" Value="public virtual MuinePluginLib.ISong PlayingSong { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>MuinePluginLib.ISong</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <returns>a <see cref="T:MuinePluginLib.ISong" /></returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="Playing">
      <MemberSignature Language="C#" Value="public virtual bool Playing { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <returns>a <see cref="T:System.Boolean" /></returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="Volume">
      <MemberSignature Language="C#" Value="public virtual int Volume { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <returns>a <see cref="T:System.Int32" /></returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="Position">
      <MemberSignature Language="C#" Value="public virtual int Position { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <returns>a <see cref="T:System.Int32" /></returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasNext">
      <MemberSignature Language="C#" Value="public virtual bool HasNext { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <returns>a <see cref="T:System.Boolean" /></returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasPrevious">
      <MemberSignature Language="C#" Value="public virtual bool HasPrevious { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <returns>a <see cref="T:System.Boolean" /></returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="Playlist">
      <MemberSignature Language="C#" Value="public virtual MuinePluginLib.ISong [] Playlist { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>MuinePluginLib.ISong[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <returns>a <see cref="T:MuinePluginLib.ISong[]" /></returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="Selection">
      <MemberSignature Language="C#" Value="public virtual MuinePluginLib.ISong [] Selection { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>MuinePluginLib.ISong[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <returns>a <see cref="T:MuinePluginLib.ISong[]" /></returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="WindowVisible">
      <MemberSignature Language="C#" Value="public virtual bool WindowVisible { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <returns>a <see cref="T:System.Boolean" /></returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="UIManager">
      <MemberSignature Language="C#" Value="public virtual Gtk.UIManager UIManager { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Gtk.UIManager</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns Muine's <see cref="T:Gtk.UIManager" /></summary>
        <returns>a <see cref="T:Gtk.UIManager" /></returns>
        <remarks>
	  <example>
	    <code lang="C#">
ActionEntry [] action_entries = new ActionEntry [] {
	new ActionEntry ("Poof", Stock.Execute, "_Poof", 
		"&lt;control&gt;&lt;shift&gt;P", null, new EventHandler (OnPoof))
};

action_group = new ActionGroup ("PoofPluginActions");
action_group.Add (action_entries);

player.UIManager.InsertActionGroup (action_group, -1);

player.UIManager.AddUI (UIManager.NewMergeId (), 
	"/MenuBar/FileMenu/ExtraFileActions", "PoofMenuItem",
	"Poof", UIManagerItemType.MenuItem, false);
	    </code>
	  </example>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Window">
      <MemberSignature Language="C#" Value="public virtual Gtk.Window Window { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Gtk.Window</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns Muine's playlist window</summary>
        <returns>a <see cref="T:Gtk.Window" /></returns>
        <remarks>Use this to properly parent your plug-in's windows.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SongChangedEvent">
      <MemberSignature Language="C#" Value="public virtual event MuinePluginLib.Plugin+SongChangedEventHandler SongChangedEvent;" />
      <MemberType>Event</MemberType>
      <ReturnValue>
        <ReturnType>MuinePluginLib.Plugin+SongChangedEventHandler</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="StateChangedEvent">
      <MemberSignature Language="C#" Value="public virtual event MuinePluginLib.Plugin+StateChangedEventHandler StateChangedEvent;" />
      <MemberType>Event</MemberType>
      <ReturnValue>
        <ReturnType>MuinePluginLib.Plugin+StateChangedEventHandler</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="PlaylistChangedEvent">
      <MemberSignature Language="C#" Value="public virtual event MuinePluginLib.Plugin+GenericEventHandler PlaylistChangedEvent;" />
      <MemberType>Event</MemberType>
      <ReturnValue>
        <ReturnType>MuinePluginLib.Plugin+GenericEventHandler</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionChangedEvent">
      <MemberSignature Language="C#" Value="public virtual event MuinePluginLib.Plugin+GenericEventHandler SelectionChangedEvent;" />
      <MemberType>Event</MemberType>
      <ReturnValue>
        <ReturnType>MuinePluginLib.Plugin+GenericEventHandler</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
