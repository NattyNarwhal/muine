AC_INIT(src/Global.cs)

AM_CONFIG_HEADER(config.h)

AM_INIT_AUTOMAKE(muine, 0.8.1pre1)

AM_MAINTAINER_MODE

AC_PROG_INTLTOOL([0.21])

AC_PROG_CC
AC_ISC_POSIX
AC_HEADER_STDC
AM_PROG_LIBTOOL

GNOME_DEBUG_CHECK
GNOME_COMPILE_WARNINGS(error)
AM_PATH_GLIB_2_0

dnl Version dependencies

LIBXINE_REQUIRED=1.0.0
GSTREAMER_REQUIRED=0.8.0
MONO_REQUIRED=1.0
GTKSHARP_REQUIRED=1.9.1
DBUSSHARP_REQUIRED=0.21
MONODOC_REQUIRED=0.16

dnl Audio backend stuff
AC_ARG_ENABLE(gstreamer, [  --enable-gstreamer=[no/yes]    compile with gstreamer support.],,enable_gstreamer=no)

if test "x$enable_gstreamer" = "xyes"; then
   audio_pkgconfig="gstreamer-0.8 >= $GSTREAMER_REQUIRED gstreamer-gconf-0.8 >= $GSTREAMER_REQUIRED"
   have_xine=no
   AC_DEFINE(HAVE_GST, 1, gstreamer support)
else
   audio_pkgconfig="libxine >= $LIBXINE_REQUIRED"
   have_xine=yes
   AC_DEFINE(HAVE_XINE, 1, xine support)
fi

AM_CONDITIONAL(HAVE_XINE, test "x$have_xine" = "xyes")
AM_CONDITIONAL(HAVE_GST, test "x$have_xine" = "xno")

dnl Pkgconfig
PKG_CHECK_MODULES(MUINE,
		  gconf-2.0 \
		  gdk-pixbuf-2.0 \
		  gnome-vfs-2.0 \
		  gtk+-2.0 \
		  gnome-icon-theme \
		  $audio_pkgconfig)
AC_SUBST(MUINE_CFLAGS)
AC_SUBST(MUINE_LIBS)

PKG_CHECK_MODULES(MONO,
		  mono >= $MONO_REQUIRED)

PKG_CHECK_MODULES(GTKSHARP,
		  gtk-sharp-2.0 >= $GTKSHARP_REQUIRED \
		  gnome-sharp-2.0 >= $GTKSHARP_REQUIRED \
		  glade-sharp-2.0 >= $GTKSHARP_REQUIRED \
		  gconf-sharp-2.0 >= $GTKSHARP_REQUIRED \
		  gnome-vfs-sharp-2.0 >= $GTKSHARP_REQUIRED)

PKG_CHECK_MODULES(DBUSSHARP,
                  dbus-sharp >= $DBUSSHARP_REQUIRED)

dnl Handle GConf
AC_PATH_PROG(GCONFTOOL, gconftool-2, no)
AM_GCONF_SOURCE_2

dnl Check for GDBM
AC_CHECK_HEADER(gdbm.h,,AC_MSG_ERROR(you need gdbm))
GDBM_LIBS="-lgdbm"
AC_SUBST(GDBM_LIBS)

dnl Check for Ogg Vorbis
MM_PATH_OGG(, AC_MSG_ERROR(You need Ogg))
AC_SUBST(OGG_CFLAGS)
AC_SUBST(OGG_LIBS)

MM_PATH_VORBIS(, AC_MSG_ERROR(You need Vorbis))
AC_SUBST(VORBIS_CFLAGS)
AC_SUBST(VORBIS_LIBS)
AC_SUBST(VORBISFILE_CFLAGS)
AC_SUBST(VORBISFILE_LIBS)

dnl Check for libid3tag
PKG_CHECK_MODULES(ID3TAG, id3tag >= 0.15, HAVE_ID3TAG="yes", HAVE_ID3TAG="no")
if test "x$HAVE_ID3TAG" = "xno"; then
	AC_CHECK_HEADER(id3tag.h, ID3TAG_LIBS="-lid3tag -lz", AC_MSG_ERROR(You need libid3tag))
fi
AC_SUBST(ID3TAG_LIBS)

dnl Check for FLAC
AC_CHECK_HEADER(FLAC/all.h, FLAC_LIBS="-lFLAC", AC_MSG_ERROR(You need FLAC))
AC_SUBST(FLAC_LIBS)

dnl Check for Mono
AC_PATH_PROG(MCS, mcs)
AC_PATH_PROG(MONO, mono)

MCS_FLAGS="-codepage:utf8"
MONO_FLAGS=
if test $USE_MAINTAINER_MODE = yes; then
	MCS_FLAGS="$MCS_FLAGS -g"
	MONO_FLAGS="$MONO_FLAGS --debug"
fi
AC_SUBST(MCS_FLAGS)
AC_SUBST(MONO_FLAGS)

dnl GAC
AC_PATH_PROG(GACUTIL, gacutil)
if test x$GACUTIL = x; then
	AC_MSG_ERROR(You need gacutil)
fi

GACUTIL_FLAGS='/package muine /gacdir $(DESTDIR)$(libdir)'
AC_SUBST(GACUTIL_FLAGS)

AC_ARG_ENABLE(gac-install, [  --disable-gac-install   Disable GAC library installation],,gac_install=yes)
AM_CONDITIONAL(GAC_INSTALL, test x$gac_install = xyes)

dnl Monodoc
PKG_CHECK_MODULES(MONODOC, monodoc >= $MONODOC_REQUIRED, have_monodoc=yes, have_monodoc=no)
AM_CONDITIONAL(ENABLE_MONODOC, test "x$have_monodoc" = "xyes")

AC_PATH_PROG(MONODOC, monodoc)

dnl Intl
ALL_LINGUAS="az bg ca cs da de en_CA en_GB es eu fi fr hr hu is ja ko lt ms nb nl no pl pt pt_BR ro ru sr sr@Latn sv zh_CN"
GETTEXT_PACKAGE=muine
AC_SUBST(GETTEXT_PACKAGE)
AC_DEFINE_UNQUOTED(GETTEXT_PACKAGE,"$GETTEXT_PACKAGE", [Gettext package])
AM_GLIB_GNU_GETTEXT

AC_OUTPUT([
Makefile
muine.spec
data/Makefile
data/muine-dbus.pc
data/muine-plugin.pc
data/org.gnome.Muine.service
data/glade/Makefile
data/images/Makefile
data/ui/Makefile
libmuine/Makefile
libmuine/id3-vfs/Makefile
libmuine/egg/Makefile
PluginLib/Makefile
DBusLib/Makefile
src/Makefile
plugins/Makefile
doc/Makefile
m4/Makefile
po/Makefile.in
])
