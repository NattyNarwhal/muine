AC_INIT(src/Global.cs)

AM_CONFIG_HEADER(config.h)
AC_CANONICAL_SYSTEM

AM_INIT_AUTOMAKE(muine, 0.8.6)

AM_MAINTAINER_MODE

AC_PROG_INTLTOOL([0.21])

AC_PROG_CC
AC_ISC_POSIX
AC_HEADER_STDC
AM_PROG_LIBTOOL

GNOME_DEBUG_CHECK
GNOME_COMPILE_WARNINGS(error)
AM_PATH_GLIB_2_0

dnl Version dependencies

LIBXINE_REQUIRED=1.0.0
GSTREAMER_REQUIRED=0.10.0
GSTREAMER_OLD_REQUIRED=0.8.0
GTK_REQUIRED=2.6
ICON_THEME_REQUIRED=2.10
MONO_REQUIRED=1.1
GTKSHARP_REQUIRED=2.4.0
DBUSSHARP_REQUIRED=0.21
MONODOC_REQUIRED=1.1.9

dnl Audio backend stuff
AC_ARG_ENABLE(xine, [  --enable-xine=[no/yes]    compile with libxine support.],,enable_xine=no)
AC_ARG_ENABLE(gstreamer, [  --enable-gstreamer=[0.8/0.10]  specify the gstreamer version.],,)

if test "x$enable_xine" = "xyes"; then
   audio_pkgconfig="libxine >= $LIBXINE_REQUIRED"
   have_xine=yes
   AC_DEFINE(HAVE_XINE, 1, xine support)
else
   PKG_CHECK_MODULES(GSTREAMER, gstreamer-0.10 >= $GSTREAMER_REQUIRED, have_gstreamer=yes, have_gstreamer=no)
   if test "x$enable_gstreamer" = "x0.8" -o "x$have_gstreamer" = "xno"; then
      have_gstreamer_old=yes
      have_gstreamer=no
      audio_pkgconfig="gstreamer-0.8 >= $GSTREAMER_OLD_REQUIRED gstreamer-gconf-0.8 >= $GSTREAMER_OLD_REQUIRED"
      AC_DEFINE(HAVE_GST_OLD, 1, gstreamer 0.8.x support)
   else
      audio_pkgconfig="gstreamer-0.10 >= $GSTREAMER_REQUIRED"
      AC_DEFINE(HAVE_GST, 1, gstreamer 0.10.x support)
   fi
   have_xine=no
fi

AM_CONDITIONAL(HAVE_XINE, test "x$have_xine" = "xyes")
AM_CONDITIONAL(HAVE_GST, test "x$have_gstreamer" = "xyes")
AM_CONDITIONAL(HAVE_GST_OLD, test "x$have_gstreamer_old" = "xyes")

dnl Pkgconfig
PKG_CHECK_MODULES(MUINE,
		  gconf-2.0 \
		  gdk-pixbuf-2.0 \
		  gnome-vfs-2.0 \
		  gtk+-2.0 >= $GTK_REQUIRED \
		  gnome-icon-theme >= $ICON_THEME_REQUIRED \
		  $audio_pkgconfig)
AC_SUBST(MUINE_CFLAGS)
AC_SUBST(MUINE_LIBS)

PKG_CHECK_MODULES(MONO,
		  mono >= $MONO_REQUIRED)

PKG_CHECK_MODULES(GTKSHARP,
		  gtk-sharp-2.0 >= $GTKSHARP_REQUIRED \
		  gnome-sharp-2.0 >= $GTKSHARP_REQUIRED \
		  glade-sharp-2.0 >= $GTKSHARP_REQUIRED \
		  gconf-sharp-2.0 >= $GTKSHARP_REQUIRED \
		  gnome-vfs-sharp-2.0 >= $GTKSHARP_REQUIRED)

PKG_CHECK_MODULES(DBUSSHARP,
                  dbus-sharp >= $DBUSSHARP_REQUIRED)

dnl check for OS
case "$target" in
	*-*-linux*)
		os_has_inotify=yes
		;;
	*)
		os_has_inotify=no
		;;
esac

dnl inotify

AC_ARG_ENABLE([inotify],
         AC_HELP_STRING([--disable-inotify], [Disable inotify filesystem monitoring support (default auto)]),
         enable_inotify=$enableval,
         enable_inotify=auto)

if test "x$os_has_inotify" = "xno"; then
	dnl error out if user has explicitly requested inotify
	if test "x$enable_inotify" = "xyes"; then
		AC_MSG_ERROR([inotify is unavailable on your system architecture])
	fi
	
	enable_inotify="no (unavailable)"
else                                                                                                                                    
	if test "x$enable_inotify" != "xno"; then
		enable_inotify="yes"
	else
		enable_inotify="no (disabled)"
	fi
fi

AM_CONDITIONAL(ENABLE_INOTIFY, test "x$enable_inotify" = "xyes")

dnl Handle GConf
AC_PATH_PROG(GCONFTOOL, gconftool-2, no)
AM_GCONF_SOURCE_2

dnl Check for GDBM
AC_CHECK_HEADER(gdbm.h,,AC_MSG_ERROR(you need gdbm))
GDBM_LIBS="-lgdbm"
AC_SUBST(GDBM_LIBS)

dnl Check for Ogg Vorbis
MM_PATH_OGG(, AC_MSG_ERROR(You need Ogg))
AC_SUBST(OGG_CFLAGS)
AC_SUBST(OGG_LIBS)

MM_PATH_VORBIS(, AC_MSG_ERROR(You need Vorbis))
AC_SUBST(VORBIS_CFLAGS)
AC_SUBST(VORBIS_LIBS)
AC_SUBST(VORBISFILE_CFLAGS)
AC_SUBST(VORBISFILE_LIBS)

dnl Check for FLAC
AC_CHECK_HEADER(FLAC/all.h, FLAC_LIBS="-lFLAC", AC_MSG_ERROR(You need FLAC))
AC_SUBST(FLAC_LIBS)

dnl Check for libid3tag
AC_ARG_ENABLE(id3tag, [  --disable-id3tag        Disable MP3 support],,have_id3tag=yes)
if test "x$have_id3tag" = "xyes"; then
	PKG_CHECK_MODULES(ID3TAG, id3tag >= 0.15, id3tag_detect=yes, id3tag_detect=no)
	if test "x$id3tag_detect" = "xno"; then
		AC_CHECK_HEADER(id3tag.h, id3tag_detect=yes, id3tag_detect=no)
	fi
	if test "x$id3tag_detect" = "xyes"; then
		ID3TAG_LIBS="-lid3tag -lz"
		AC_DEFINE(HAVE_ID3TAG, 1, id3tag support)
	else
		AC_DEFINE(HAVE_ID3TAG, 0, id3tag support)
	fi
else
	AC_DEFINE(HAVE_ID3TAG, 0, id3tag support)
fi

AM_CONDITIONAL(HAVE_ID3TAG, test "x$have_id3tag" = "xyes")
AC_SUBST(ID3TAG_LIBS)

dnl Check for FAAD 
AC_ARG_ENABLE(faad2, [  --disable-faad2         Disable AAC support],,enable_faad2=yes)
if test "x$enable_faad2" = "xyes"; then
	AC_CHECK_HEADER(mp4ff.h, faad2_detect=yes, faad_detect=no)
	if test "x$faad2_detect" = "xyes"; then
		FAAD_LIBS="-lmp4ff -lfaad"
		AC_DEFINE(HAVE_FAAD, 1, faad2 support)
	else
		AC_DEFINE(HAVE_FAAD, 0, faad2 support)
	fi
else
	AC_DEFINE(HAVE_FAAD, 0, faad2 support)
fi

AM_CONDITIONAL(HAVE_FAAD, test "x$have_faad2" = "xyes")
AC_SUBST(FAAD_LIBS)

dnl Check for Mono
AC_PATH_PROG(MCS, mcs)
if test x$MCS = x; then
        AC_MSG_ERROR(You need mcs)
fi
AC_PATH_PROG(MONO, mono)
if test x$MONO = x; then
        AC_MSG_ERROR(You need mono)
fi

MCS_FLAGS="-codepage:utf8"
MONO_FLAGS=
if test $USE_MAINTAINER_MODE = yes; then
	MCS_FLAGS="$MCS_FLAGS -debug"
	MONO_FLAGS="$MONO_FLAGS --debug"
fi
AC_SUBST(MCS_FLAGS)
AC_SUBST(MONO_FLAGS)

dnl GAC
AC_PATH_PROG(GACUTIL, gacutil)
if test x$GACUTIL = x; then
	AC_MSG_ERROR(You need gacutil)
fi

GACUTIL_FLAGS='/package muine /gacdir $(libdir) /root $(DESTDIR)$(libdir)'
AC_SUBST(GACUTIL_FLAGS)

dnl Monodoc
PKG_CHECK_MODULES(MONODOC, monodoc >= $MONODOC_REQUIRED, have_monodoc=yes, have_monodoc=no)
AM_CONDITIONAL(ENABLE_MONODOC, test "x$have_monodoc" = "xyes")

AC_PATH_PROG(MDASSEMBLER, mdassembler)
AC_PATH_PROG(MONODOCER, monodocer)

dnl Intl
ALL_LINGUAS="ar az bg ca cs da de dz en_CA en_GB es et eu fi fr hr hu is ja ko lt lv mk ms nb ne nl pa pl pt pt_BR ro ru rw sk sr sr@Latn sv th uk vi zh_CN"
GETTEXT_PACKAGE=muine
AC_SUBST(GETTEXT_PACKAGE)
AC_DEFINE_UNQUOTED(GETTEXT_PACKAGE,"$GETTEXT_PACKAGE", [Gettext package])
AM_GLIB_GNU_GETTEXT

AC_OUTPUT([
Makefile
muine.spec
data/Makefile
data/muine-dbus.pc
data/muine-plugin.pc
data/org.gnome.Muine.service
data/glade/Makefile
data/images/Makefile
data/ui/Makefile
libmuine/Makefile
libmuine/id3-vfs/Makefile
PluginLib/Makefile
DBusLib/Makefile
src/Makefile
plugins/Makefile
doc/Makefile
m4/Makefile
po/Makefile.in
])
